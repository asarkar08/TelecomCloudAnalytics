<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<AllRules>

<downtimerulebackend2>select distinct * from IncomingDataStream(aid_alarm_id in('backend2_not_running','backend2_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('tts_cron','eAlarm_voice_ntr')).win:time(120 min) as a2 having convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulebackend2>
<downtimerulemysqlbackend1>select distinct * from IncomingDataStream(aid_alarm_id in('backend1_not_running','backend1_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend1>
<downtimerulemysqlbackend2>select distinct * from IncomingDataStream(aid_alarm_id in('backend2_not_running','backend2_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend2>
<downtimerulemysqlbackend3>select distinct * from IncomingDataStream(aid_alarm_id in('backend3_not_running','backend3_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend3>
<downtimerulemysqlbackend4>select distinct * from IncomingDataStream(aid_alarm_id in('backend4_not_running','backend4_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend4>
<downtimerulemysqlbackend5>select distinct * from IncomingDataStream(aid_alarm_id in('backend5_not_running','backend5_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend5>
<downtimerulemysqlbackend6>select distinct * from IncomingDataStream(aid_alarm_id in('backend6_not_running','backend6_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend6>
<downtimerulemysqlbackend7>select distinct * from IncomingDataStream(aid_alarm_id in('backend7_not_running','backend7_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron','mysql_replication_cron')).win:time(120 min) as a2 having  a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlbackend7>
<downtimerulebackend4>select distinct * from IncomingDataStream(aid_alarm_id in('backend4_not_running','backend4_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('iphonerestart_cron')).win:time(120 min) as a2 having convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulebackend4>
<downtimerulebackend6>select distinct * from IncomingDataStream(aid_alarm_id in('backend6_not_running','backend6_restarts')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('eAlarm_voice_ntr')).win:time(120 min) as a2 having convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulebackend6>
<downtimerulebackendga>select distinct * from IncomingDataStream(aid_alarm_id in('ga_backend')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('eAlarm_voice_ntr')).win:time(120 min) as a2 having convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulebackendga>
<downtimerulebackendsms>select distinct * from IncomingDataStream(aid_alarm_id in('sms_backend')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('eAlarm_sms_ntr')).win:time(120 min) as a2 having convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulebackendsms>
<downtimeruleSwitchtoSlave>select distinct * from IncomingDataStream(aid_alarm_id in('eAlarm_Switch_to_slave')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('fscapacity_pa','fsinode_pa','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a2.funchostname ='SG001043-APPDB01' and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleSwitchtoSlave>
<downtimeruleSpealapp02down>select distinct * from IncomingDataStream(aid_alarm_id in('eAlarm_spealapp02_down')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('fscapacity_pa','fsinode_pa','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a2.funchostname ='SPEALAPP02-APPDB02' and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleSpealapp02down>
<downtimeruleSg001043down>select distinct * from IncomingDataStream(aid_alarm_id in('eAlarm_sg001043_down')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('fscapacity_pa','fsinode_pa','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a2.funchostname ='SG001043-APPDB01' and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleSg001043down>
<downtimerulebackendfreelines>select distinct * from IncomingDataStream(aid_alarm_id in('backend_warning_freelines')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('eAlarm_voice_ntr')).win:time(120 min) as a2 having convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulebackendfreelines>
<downtimeruleglusterfs>select distinct * from IncomingDataStream(aid_alarm_id in('glusterfs_cron')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('backendcheck_cron','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa','mysql_longqueries_cron')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleglusterfs>
<downtimeruledbrwcheck>select distinct * from IncomingDataStream(aid_alarm_id in('dbrwcheck_cron')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruledbrwcheck>
<downtimeruleiphonerestart>select distinct * from IncomingDataStream(aid_alarm_id in('iphonerestart_cron')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('backendcheck_cron')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleiphonerestart>
<downtimeruleealarmsms>select distinct * from IncomingDataStream(aid_alarm_id in('eAlarm_sms_ntr')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min)  as a2 having a2.funchostname in ("SG001043-APPDB01","SPEALAPP02-APPDB02") and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleealarmsms>
<downtimerulepdf>select distinct * from IncomingDataStream(aid_alarm_id in('pdf_cron')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('fscapacity_pa','fsinode_pa','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulepdf>
<downtimeruleealarmapplication>select distinct * from IncomingDataStream(aid_alarm_id in('eAlarm_apperr_ntr')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('glusterfs_cron','fscapacity_pa','fsinode_pa','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruleealarmapplication>
<downtimeruletts>select distinct * from IncomingDataStream(aid_alarm_id in('tts_cron')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('glusterfs_cron','fscapacity_pa','fsinode_pa','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimeruletts>
<downtimerulemysqllongqueries>select distinct * from IncomingDataStream(aid_alarm_id in('mysql_longqueries_cron')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqllongqueries>
<downtimerulemysqlreplication>select distinct * from IncomingDataStream(aid_alarm_id in('mysql_replication_cron')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('backendcheck_cron','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqlreplication>


<uptimeplatformeventsmemusagepercrule>select distinct *,'PLATFORM_MEMUSAGEPERC_' as uptimepfid,'MEMORY USAGE PERCENTAGE events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('memappusableperc_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventsmemusagepercrule>
<uptimeplatformeventsfsinoderule>select distinct *,'PLATFORM_FSINODE_' as uptimepfid,'FILE SYSTEM related events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('fsinode_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventsfsinoderule>
<uptimeplatformeventscpuwiorule>select distinct *, 'PLATFORM_CPUWIO_' as uptimepfid, 'CPU WIO events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('cpuwio_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventscpuwiorule>
<uptimeplatformeventsfscapacityrule>select distinct *, 'PLATFORM_FSCAP_' as uptimepfid, 'File SYSTEM CAPACITY events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('fscapacity_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventsfscapacityrule>
<uptimeplatformeventscpuutilrule>select distinct *, 'PLATFORM_CPUUTIL_' as uptimepfid, 'CPU Util events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('cpuutil_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventscpuutilrule>
<uptimeplatformeventscpusystimerule>select distinct *, 'PLATFORM_CPUSYSTIME_' as uptimepfid, 'CPU Systime events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('cpusystime_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventscpusystimerule>
<uptimeplatformeventscpuusertimerule>select distinct *, 'PLATFORM_CPUUserTime_' as uptimepfid, 'CPU Usertime events crossed threshold limit. Possible performance and dimensioning issues. Please take necessary action.' as uptimenotify from IncomingDataStream(aid_alarm_id in('cpuusertime_pa')).win:time(120 min) group by funchostname having count(*) &gt; 5</uptimeplatformeventscpuusertimerule>
<uptimeealarmsmsrule1_6>select distinct *, id as uptimeid,'scom and nprio value is going down, it may lead to reduced redundancy or performance' as uptimenotify from IncomingDataStream(aid_alarm_id in('eAlarm_sms_ntr')).win:time(120 min) having (scomval between '1' and '6') and (nprioval between '1' and '6')</uptimeealarmsmsrule1_6>
<uptimeealarmsmsrule1_0>select distinct *, id as uptimeid,'scom and nprio value is 0, No SMS service will be available ' as uptimenotify from IncomingDataStream(aid_alarm_id in('eAlarm_sms_ntr')).win:time(120 min) having scomval = '0' and nprioval = '0'</uptimeealarmsmsrule1_0>
<uptimeealarmvoicerule1>select distinct *,id as uptimeid, 'Reduced redunduncy and Performance' as uptimenotify from IncomingDataStream(aid_alarm_id in('eAlarm_voice_ntr')).win:time(120 min) having laval='3' and zhval='3'</uptimeealarmvoicerule1>
<uptimeealarmvoicerule2>select distinct *,id as uptimeid, 'No Conference calls and no incoming calls possible' as uptimenotify from IncomingDataStream(aid_alarm_id in('eAlarm_voice_ntr')).win:time(120 min) having laval='2' and zhval='0'</uptimeealarmvoicerule2>
<uptimeealarmvoicerule3>select distinct *,id as uptimeid, 'No Phone call alerts, conferences and  incoming calls' as uptimenotify from IncomingDataStream(aid_alarm_id in('eAlarm_voice_ntr')).win:time(120 min) having laval='0' and zhval='0'</uptimeealarmvoicerule3>
<uptimeealarmsarrule1>select distinct *,id as uptimeid, 'SAR IO value is greater than 10 Possibility of Performance issues' as uptimenotify from IncomingDataStream(aid_alarm_id in('sar_cron')).win:time(120 min) having sarioval &gt; '10'</uptimeealarmsarrule1>
<uptimeealarmsarrule2>select distinct *,id as uptimeid, 'SAR Idle value is greater than 35 Possibility of Performance issues' as uptimenotify from IncomingDataStream(aid_alarm_id in('sar_cron')).win:time(120 min) having saridleval &lt; '35' </uptimeealarmsarrule2>
<uptimeealarmsarrule3>select distinct *,id as uptimeid, 'SAR load is greater than 140 Possibility of Performance issues' as uptimenotify from IncomingDataStream(aid_alarm_id in('sar_cron')).win:time(120 min) having sarloadavgval &gt; '140'</uptimeealarmsarrule3>
<uptimeopenalertrule>select distinct *,id as uptimeid, 'Open Alerts can cross threshold, Possibility of Performance issues, Please suppport Alert Support Personnel.' as uptimenotify from IncomingDataStream(aid_alarm_id in('openalert_cron')).win:time(120 min) having openalertwarnval &gt; '150' or openalertcritval &gt; '900'</uptimeopenalertrule>

<uptimeealarmsmsrule1_6_1>select distinct *, id as uptimeid,'scom and nprio value is going down,it may lead to reduced redundancy or performance' as uptimenotify from IncomingDataStream(aid_alarm_id in('eAlarm_sms_ntr')).win:time(120 min) having ((scomval &gt;= '1' and scomval &lt;= '6') and (nprioval &gt;= '1' and nprioval &lt;= '6'))</uptimeealarmsmsrule1_6_1>

<uptimeMYSqldownrule>select distinct *,id as uptimeid, 'The MySQL on secondary server is down. There is a potential risk of the system being down, if the primary also goes down, because the Standby is not available.' as uptimenotify from IncomingDataStream(aid_alarm_id in('mysql_standby_down')).win:time(120 min)</uptimeMYSqldownrule>

<downtimerulemysqldownserver>select distinct * from IncomingDataStream(aid_alarm_id in('mysql_server_down')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('backendcheck_cron','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqldownserver>

<downtimerulemysqldownstandby>select distinct * from IncomingDataStream(aid_alarm_id in('mysql_standby_down')).win:time(120 min) as a1, IncomingDataStream(aid_alarm_id in('backendcheck_cron','cpuutil_pa','cpusystime_pa','cpuusertime_pa','cpuwio_pa','memappusableperc_pa')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</downtimerulemysqldownstandby>

<newruletrial1>select distinct * from IncomingDataStream(aid_alarm_id in('tts_cron')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('sms_backend')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname</newruletrial1>
<newruletria2>select distinct * from IncomingDataStream(aid_alarm_id in('tts_cron')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('ga_backend')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</newruletria2>
<newrulepralay>select distinct * from IncomingDataStream(aid_alarm_id in('tts_cron')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('ga_backend')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname and convertDate(a1.eventdate) = convertDate(a2.eventdate)</newrulepralay>
<newrulepralay123>select distinct * from IncomingDataStream(aid_alarm_id in('tts_cron')).win:time(120 min) as a1,IncomingDataStream(aid_alarm_id in('ga_backend')).win:time(120 min) as a2 having a1.funchostname=a2.funchostname</newrulepralay123>
</AllRules>
